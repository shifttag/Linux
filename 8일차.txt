< 7일차 부족한 부분 추가 >
	sleep 100 & : 백그라운드 실행 프로세스 확인
	jobs : 백그라운드 실행 확인
	fg : 백그라운드 실행중인 프로그램을 포그라운드로 실행
	bg %1 : 포그라운드 실행중인 프로그램을 백그라운드로 실행

< 지난 강의 복습 문제 >
	1. sleep 100 명령어를 포그라운드 프로세스로 실행한다. 실행 후 해당 프로세스를 종료한다
	2. sleep 100 명령어를 백그라운드 프로세스로 실행한다
	3. 백그라운드 프로세스로 실행중인 sleep 100 프로세스의 PID를 알아낸다
	4. 해당 PID를 사용하여 sleep 100 프로세스를 종료한다
	5. sleep 100 명령어를 포그라운드로 실행하고, 백그라운드로 전환한다
	6. 다시 포그라운드로 전환하고 종료한다
	7. sleep 100 명령어를 1분뒤 백그라운드로 실행하도록 예약한다

< 답안 >
	1. sleep 100
	   (ctrl + c)
	2. sleep 100 &
	3. ps -ef
	   또는 pgrep sleep
	4. kill -9 23608
	5. sleep 100
	   (ctrl + z)
	   bg
	   jobs 로 확인
	6. fg %1
	   (ctrl + c)
	7. at now + 1 minuete
	   sleep 100 & 
	   (ctrl + d)

< 8일차 >
	at : 예약한 명령어 한번만 실행	ex) 1시간 뒤에 실행해줘
	cron : 예약한 명령어 반복 실행	ex) 매일 7시에 실행해줘

네트워크 
	mac 주소 : 네트워크 장비 식별자
	ip 주소 : 호스트 식별자
	port 번호 : 네트워크에서 프로세스 식별자

	IPv4 : 192.168.3.29
		0 ~ 255 = 2^8개 -> IPv4 = 2^32
		대략 42억개의 호스트를 나타낼수 있음
		유동 IP라는 거랑 로컬 IP로 지금은 커버 가능

	IPv6 : fe80::250c:8fa4:c0fc:8ebf%3
		IPv6 = 2^128  

	서브넷 마스크 = 넷마스크 
	192.168.3 / .29
	NetID	/ HostID
	넷마스크로 NetID랑 HostID를 구별한다
	255.255.255.0
	255 = 11111111 (binary)
	192.168.3.29
	192 = 11000000 (binary)

	And bit 연산 -> 11000000
	192.168.3.0 => NetID
		.29 => HostID
	
	게이트웨이 : 공유기 주소

	포트 번호 : 네트워크에서 프로세스 식별자
		  어플리케이션 개발자가 설정할 수 있음.
	8080, 80(http) / 433(https) => 브라우저에서 웹사이트 띄우기 위한 프로세스에 사용되는 포트번호
	Known prot (잘 알려진 포트)
	포트 포워딩 : 
	http, https : 프로토콜 (약속)

	Public IP
	1.252.206.49
	: 인터넷 상에서 고유하게 식별되는 IP
	  인터넷을 통해 다른 지역의 기기들과 통신 가능
	  인터넷 서비스 제공자에서 할당해줌.

	Private IP (Local IP)
	192.168.3.29
	: 공유기 등  내부에 네트워크 기기와 연결된 호스트 사이에서 
	  식별되는 IP
	 해당 IP로는 인터넷으로 직접 접근 불가능
	 네트워크 관리자나 라우터

	유동 IP
	: 동적으로 할당되는 IP 주소
	KT IP 3000만개 가지고 있음
	대한민국에 필요한 IP 5000만개 필요
	사람들이 많을 때 2500만개가 사용된다
	지역마다 100만개씩 IP주소 할당	

	고정 IP
	: 고정적으로 할당되는 IP 주소
	서버 주소가 고정되어야 함
	나중에 내가 웹 사이트를 만들었다면, 고정 IP 할당 받아야 함
	비용은 유동IP 보다 비쌈

NetworkManager
	설치 : sudo apt install network-manager
	실행 : sudo systemctl start NetworkManager.service
	상태 확인 : systemctl status NetworkManager	(Active : active시 실행 중)
	예시 세팅 : sudo nmcli con add type ethernet con-name test-net ifname enp0s3 ip4 10.0.2.15/24 gw4 10.0.2.2
		sudo nmcli con add => 커넥션 만들기 명령어
		type ethernet	=> 유/무선 유선 : ethernet
		con-name test-net 	=> 커넥션명 지정
		ifname enp0s3	=> 디바이스 명
		ip4 10.0.2.15/24	=> IP주소/넷마스크
			10.0.2.15/24 => IP주소/넷마스크 길이
		gw4 10.0.2.2	=> 게이트웨이
	ip 주소 확인 : ip addr show
	KT네트워크
	->
	공인 아이피
	1.252.206.49
	->
	사설 아이피
	192.168.3.101 포트번호도 같이 보냄
	-> 포트번호로 먼저 VM 프로세스로 할당
	리눅스 VM 아이피
	10.0.2.15

	ip route add IP주소1 via IP주소2 dev 장치명
	: IP주소 1로 접속했을 때 IP주소 2로 라우팅함

	포트번호 : 프로세스관련 (SSH, HTTP 통신 할 때 사용) 

	IP 주소 할당하기
	라우팅
	
	게이트웨이 설정
	route

네트워크 단위

	Stream : 시작은 있는데 끝은 알수 없음
		크기가 굉장히 큼 
	Packet : 스트림을 잘게 나눈 단위
		패킷으로 만드는 것을 segment
	---------------------------- 어플리케이션 개발자--------------------------------
	Frame : 패킷을 프레임으로 바꾸는 것을 incapsulation 이라고 한다

		aaabbbcccddd
		(몇번째 패킷인지(어디에 보낼건지(내가 누구인지(aaa))))
		a1 b2 c3 d4
		1   2   3   4
		1번이 안와서 다시 보내달라 라는 것이
		3/4 hand-shaking		

	UDP(단방향) / TCP(양방향)
	SSH 할 때 설명할 예정
	보안이랑 관련 있음










































