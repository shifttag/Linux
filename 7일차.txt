< 지난 강의 복습 문제 >
1. nginx 패키지를 설치합니다
2. nginx 패키지가 설치한 파일 목록 검색하고, 결과를 nginx-installed.log 파일 내용에 저장합니다
3. nginx 패키지를 설정 파일을 포함하여 삭제합니다
4. nginx 패키지 설치 파일을 ubuntu 유저 홈 디렉터리에 다운로드 받습니다
5. nginx 패키지 설치 파일로 패키지를 다시 설치합니다
6. 다시 nginx 패키지를 설정파일을 포함하여 삭제합니다

< 답안 >
1. apt-get install nginx
2. dpkg -L nginx > nginx-installed.log
3. sudo apt-get remove --purge nginx
4. sudo apt-get download nginx
5. sudo -i nginx_1.18.0-0ubuntu1.4_all.deb
6. sudo dpkg -P nginx

< 7일차 >

1. PPA (개인 패키지 저장 창고)
	(google) ppa ubuntu 검색 launchpad.net
	tomcat8 검색 -> Apache Tomcat 8.5.x
	밑에 Overview of published packages -> published in 확인 focal, bionic 버전 확인
	ubuntu 창에서 cat /etc/os-release -> version확인	
	sudo add-apt-repository ppa:ttyrnpuu/tomcat
	sudo apt update
	sudo apt search tomcat8 로 tomcat8확인

2. 파일 아카이브 & 압축
	파일1 파일2 파일3
	파일1 파일2 파일3 -> 아카이브 파일 (여러 파일을 하나의 단일 파일로 묶는 것을 의미)
	파일1 파일2 파일3 -> 압축 파일 (데이터를 작게 만들거나 용량을 줄이는 것을 의미)

	aaaadddddcccccccssssssss -> a4d5c7s8 (효율적인 압축방법)

	아카이브 파일 
		tar cvf sub5.tar sub5 (아카이브 파일 생성)
		tar tvf sub5.tar (아카이브 파일 확인)
		tar xvf sub5.tar (아카이브 파일 풀기)
		tar uvf sub5.tar sub5 (tar 파일에 추가)
		tar rvf sub5.tar test-file1 (tar 파일에 test-file1을 강제 추가)
		
	압축 파일 (확장자 : .gz)
		gzip sub5.tar (파일 압축)
		zcat sub5.tar.gz (압축파일 내용 확인)
		gunzip sub5.tar.gz (압축 풀기)
		(확장자 : .gz2)
		bzip : (파일 압축)
		 --best : (최대 압축하기)
		bzcat : (압축 파일 내용 확인)
		bunzip2 : (압축 풀기)
	
3. 프로세스 (task, service)
	: 컴퓨터에서 실행중인 프로그램

	프로그램 : 하드디스크에 저장되어 있는 실행코드
	프로그램을 실행하면 
	-> 하드디스크에서 메모리로 복사해서 이동시킴(캐싱)

	백그라운드 프로세스 
	 : 명령  처리가 끝나는 것과 관계없이 다른 작업이 가능 (비동기)
	포그라운드 프로세스
	 : 명령 처리가 끝날때 까지 다른 작업 불가 (동기)
	
	부모 프로세스
	자식 프로세스
	- 부모프로세스가 생성한다
	- 자식 프로세스를 생성할 수 있다
	- 할 일이 끝나면 부모 프로세스에 결과를 

	프로세스 종류
		- 데몬 프로세스 :  실행 후 결과에 상관없이 계속 실행되는 프로세스
				리눅스에서는 리눅스 커널에 의해 실행됨
		- 고아 프로세스 : 자식 프로세스가 실행중인데 부모프로세스가 먼저 종료된 프로세스
				고아 프로세스가 부모 프로세스가 되어 연관된 고아 프로세스를 작업 종료
		- 좀비 프로세스 : 자식 프로세스가 실행중인데 부모 프로세스가 먼저 종료된 프로세스
				고아 프로세스가 종료가 안되어서 프로세스 테이블 목록에 남아있으면 좀비
				좀비 프로세스가 너무 많으면 메모리 용량이 부족해서 일반 프로세스가
				실행되지 않을수도 있다 (defunct 프로세스)
	프로세스 상태
		- 생성 (create) : 프로세스가 생성되는 중
		- 실행 (running) : 프로세스 실행중
		- 준비 (ready) : 현재 CPU를 사용하고 있지 않음, CPU가 할당되기를 기다리는중
		- 대기/보류 (waiting/block) : 프로세스가 입출력이 완료 등을 기다리고 있는 상태
		- 종료 (terminated/dead) : 프로세스 종료

	리눅스 커널
		(1) 준비 큐
		(2) 대기 큐
		(3) 실행 큐

	스레드
		멀티스레드 : 
		싱글스레드 : 
	
		ps : 포그라운드 프로세스 확인
		ps -e : 백그라운드까지 프로세스 확인
		ps -ef : 백그라운드까지 자세하게 프로세스 확인
		ps -f : 상세 정보 출력
		ps a : 프로세스 정보(상태 포함) 출력
		ps u : 상세 정보 출력
		ps x : 백/포그라운드 프로세스 모두 출력
			STAT 
				S : 대기중
				R : 실행중
				Z : 좀비
				T : 정지된 상태(작업 제어 명령어로 정지)
		유닉스옵션/BSD옵션
			

		sleep 100 & : 프로세스 확인
		pgrep sleep : 동작 프로세스 확인
		kill -9 22249 : 프로세스 종료

		kill 주요 시그널
			-9 : 해당 시그널을 받은 프로세스는 무조건 강제 종료된다
			-2 : ctrl + c 입력하면 인터럽트 
			-15 : 일반 종료

< 결제 로직 >
- bootpay,  ~pot

	1. 프론트(인터넷 브라우저)에서 결제 플랫폼에 결제 창을 요청
	2. 결제 플랫폼에서 결제창을  줌
	3. 사용자가 결제 진행
	4. 결제 플랫폼으로 사용자가 입력한 정보들을 전달
	5. 결제 플랫폼이 프론트에 영수증을 전달
	6. 프론트가  백에 해당 영수증에 정보가 결제를 원하는 제품의 정보와 일치하는지를 확인
	7-1 . 백에서 프론트로 검증이 완료되었다고 응답
	7-2 백에서 결제 플랫폼으로 결제 승인.
	(선택 8.) 결제 플랫폼에서 결제 완료 데이터를 백으로 전달 (webhook 처리)







































































